{"version":3,"sources":["components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","className","href","xmlns","fill","viewBox","stroke","d","fillRule","clipRule","defaultCached","name","value","Tab","props","color","active","draggable","onClick","onToggle","children","NewFileTab","onNewFile","useState","editing","setEditing","setValue","inputRef","useRef","ref","autoFocus","spellCheck","placeholder","onChange","e","target","onKeyPress","code","current","blur","onBlur","class","getFileLanguage","filename","parts","split","ext","length","includes","App","iframeRef","editorRef","monacoRef","logs","files","setFiles","iframeCode","resizing","setResizing","isEditorReady","setIsEditorReady","currentModel","setCurrentModel","useEffect","setModel","editor","getModel","onResizeStart","onResizeEnd","initialSize","style","minHeight","Object","keys","map","f","urn","uuidv4","m","createModel","clone","theme","language","defaultValue","onMount","monaco","console","log","cachedFiles","JSON","parse","localStorage","getItem","filesObj","startFile","forEach","fileKey","languages","typescript","javascriptDefaults","setEagerModelSync","event","setItem","stringify","minSize","maxSize","variant","title","srcDoc","referrerPolicy","width","onLoad","window","addEventListener","msg","data","level","args","allowFullScreen","allow","sandbox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0633f40b.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Sidebar = () => {\n  return (\n    <aside className=\"flex flex-col items-center bg-gray-800 text-gray-200 shadow h-full\">\n  \n        <div className=\"h-16 w-16 flex items-center \">\n          <a className=\"h-6 w-6 mx-auto text-green-400\" href=\"/\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n          </a>\n        </div>\n\n        <div className=\"h-16 flex items-center w-16 hover:bg-gray-600\">\n          <button className=\"h-16 mx-auto flex justify-center items-center w-full hover:bg-gray-600 hover:text-green-400 focus:outline-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clip-rule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"h-16 flex items-center w-16 hover:bg-gray-600\">\n          <button className=\"h-16 mx-auto flex justify-center items-center w-full hover:bg-gray-600 hover:text-green-400 focus:outline-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\" clip-rule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"h-16 flex items-center w-16 hover:bg-gray-600\">\n          <button className=\"h-16 mx-auto flex justify-center items-center w-full hover:bg-gray-600 hover:text-green-400 focus:outline-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path d=\"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" />\n            </svg>\n          </button>\n        </div>\n        \n        <div className=\"h-16 flex items-center w-16 hover:bg-gray-600\">\n          <button className=\"h-16 mx-auto flex justify-center items-center w-full hover:bg-gray-600 hover:text-green-400 focus:outline-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n    \n        <div className=\"mt-auto h-16 flex items-center w-full\">\n          <button\n            className=\"h-16 mx-auto flex justify-center items-center w-full hover:bg-gray-700 focus:outline-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clip-rule=\"evenodd\" />\n            </svg>\n\n          </button>\n        </div>\n    \n      </aside>\n  )\n}\n","import React, { useCallback, useRef, useState, useEffect, useLayoutEffect } from 'react'\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Hook, Unhook, Console, Decode } from 'console-feed'\nimport SplitPane from 'react-split-pane';\nimport Pane from 'react-split-pane/lib/Pane';\n\nimport { Sidebar } from './components/Sidebar'\n\n/*\nTODO:\n- fix console logs\n- fix pane dragging\n- fix code injection with data url\n- setup code saving with firebase\n\n** import maps for supporting scripts modules\n-> fetch all module scripts that have a src attribute\n-> get the contents of that file, generate data url\n-> construct importmap\n-> inject importmap \n-> remove all previous script tags\n\n*/\n\n\nconst injectLoggingControl = (doc) => {\n  const script = `\n    const fakeConsole = {};\n    function formatArgs(args) {\n      return args\n        .map((arg) => {\n          if (arg instanceof Element) {\n            return arg.outerHTML;\n          }\n          return typeof arg === 'object' \n            ? JSON.stringify(arg, null, 2)\n            : '\"' + String(arg) + '\"';\n        })\n        .join(' ')\n    }\n\n    for (const level of ['log', 'error', 'warn']) {\n      fakeConsole[level] = console[level];\n      console[level] = (...args) => {\n        fakeConsole[level](...args);\n        window.parent.postMessage({ event: 'LOG', level, args: args }, '*');\n      }\n    }\n  `\n\n  var logScript = doc.createElement('script')\n  logScript.type = 'module'\n  logScript.innerHTML = script\n  doc.head.appendChild(logScript)\n  return doc\n}\n\nconst injectDependencies = (html, files) => {\n  var parser = new DOMParser();\n  var doc = parser.parseFromString(html, \"text/html\");\n  var scripts = doc.getElementsByTagName(\"script\")\n  for (let i=0; i<scripts.length; i++) {\n    const srcPath = scripts[i].src.split(\"/\")\n    if (srcPath.length > 1) {\n      const src = srcPath[srcPath.length - 1]\n      let newScript = document.createElement('script')\n      newScript.innerHTML = files[src]\n      scripts[i].replaceWith(newScript)\n    }\n  }\n  doc = injectLoggingControl(doc)\n\n  return doc.documentElement.outerHTML\n}\n\nconst defaultCached = {\n  \"urn:default\": {\n    name: \"index.html\",\n    value: \"<html>\\n\"+\"\\t<body>\\n\\t\\n\\t\"+\"</\"+\"body>\\n\\n\"+\"\\t<script>\\n\\t// write some code here\"+\"\\n\\t</\"+\"script>\\n\"+\"</html>\"\n  }\n}\n\nconst Tab = (props) => {\n  const color = props.active ? 'text-white border-b-2' : 'hover:bg-gray-500 italic text-green-300'\n  return <button draggable={true} onClick={() => props.onToggle(props.value)} \n    className={`text-xs font-semibold ${color} px-4 block focus:outline-none border-white divide-x divide-light-blue-400`}>\n    {props.children}\n  </button>\n}\n\nconst NewFileTab = ({ onNewFile }) => {\n  const [editing, setEditing] = useState(false)\n  const [value, setValue] = useState('')\n  const inputRef = useRef()\n\n  const updateValue = (e) => {\n    setValue(e.target.value)\n  }\n\n  const onKeyPress = (e) => {\n    if (e.code === 'Enter') inputRef.current.blur()\n  }\n\n  const finishEdit = () => {\n    onNewFile(value)\n    setEditing(false)\n  }\n\n  const startEditing = () => {\n    setEditing(true)\n    setValue('')\n  }\n\n  return (\n    <button onClick={startEditing} \n      className={`text-xs font-semibold px-1 block bg-gray-700 ${!editing && 'hover:bg-gray-500'} focus:outline-none border-t border-l border-r border-gray-600`}>\n      {\n        editing ? (\n          <div className=\"flex flex-row justify-center text-gray-300\">\n            <input className=\"bg-transparent text-sm px-1 mx-1 focus:outline-none\"\n              ref={inputRef}\n              autoFocus\n              spellCheck={false}\n              placeholder=\"Untitled\"\n              onChange={updateValue}\n              onKeyPress={onKeyPress}\n              onBlur={finishEdit}\n              />\n          </div>\n        ) : (\n          <div className=\"flex flex-row justify-center text-gray-300 px-3 italic\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n            </svg>\n            <span>New</span>\n          </div>\n        )\n      }\n    </button>\n  )\n}\n\nconst getFileLanguage = (filename) => {\n  const parts = filename.split(\".\")\n  const ext = parts[parts.length-1]\n  if (ext.includes(\"js\")) return \"javascript\"\n  if (ext.includes(\"css\")) return \"css\"\n  if (ext.includes(\"html\")) return \"html\"\n}\n\nfunction App() {\n  const iframeRef = useRef()\n  const editorRef = useRef()\n  const monacoRef = useRef()\n  // const monaco = useMonaco()\n  const [logs, setLogs] = useState([])\n  const [files, setFiles] = useState({})\n  const [iframeCode, setIframeCode] = useState()\n  const [resizing, setResizing] = useState(false)\n\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [currentModel, setCurrentModel] = useState();\n\n  const handleEditorDidMount = (editor, monaco) => {\n    console.log(\"editor mount\")\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n    const cachedFiles = JSON.parse(localStorage.getItem(\"jsplay-cache\")) || defaultCached\n    let filesObj = {}\n    let startFile = null;\n    Object.keys(cachedFiles).forEach((fileKey) => {\n      monacoRef.current.editor.createModel(cachedFiles[fileKey].value, getFileLanguage(cachedFiles[fileKey].name), fileKey);\n      filesObj[fileKey] = cachedFiles[fileKey]\n      if (startFile == null) {\n        startFile = fileKey;\n      }\n    })\n\n    setFiles(filesObj)\n\n    monacoRef.current.languages.typescript.javascriptDefaults.setEagerModelSync(\n      true\n    );\n    setIsEditorReady(true);\n    setCurrentModel(startFile)\n  }\n\n  useEffect(() => {\n    if (isEditorReady) {\n      editorRef.current.setModel(\n        monacoRef.current.editor.getModel(currentModel)\n      );\n    }\n  }, [isEditorReady, currentModel]);\n\n  const onNewFile = (filename) => {\n    const urn = `urn:${uuidv4()}`\n    const m = monacoRef.current.editor.createModel(\"// this is a dummy file\", getFileLanguage(filename), urn);\n    editorRef.current.setModel(m);\n    setFiles(f => {\n      let clone = {...f}\n      clone[urn] = {\n        value: \"// this is a dummy file\",\n        name: filename\n      }\n      return clone\n    })\n    setCurrentModel(urn)\n  }\n\n  const onChange = (value, event) => {\n    let clone = {...files}\n    clone[currentModel].value = value\n    localStorage.setItem('jsplay-cache', JSON.stringify(clone))\n  }\n\n  const onRender = () => {\n    const value = monacoRef.current.editor.getModel(currentModel).getValue()\n    let valuesMap = {}\n    monacoRef.current.editor.getModels().forEach(m => {\n      if (files[m.uri] != null) {\n        valuesMap[files[m.uri].name] = m.getValue()\n      }\n    })\n    setIframeCode(injectDependencies(value, valuesMap))\n  }\n\n  return (\n    <div className=\"h-screen w-screen flex\">\n      <Sidebar/>\n      <div className=\"flex flex-col w-full h-full\">\n        <div className=\"p-1 max-h-8 h-8 bg-gray-800 border-b-2 border-gray-600 text-sm flex-grow flex justify-between\">\n          <span></span>\n          <span className=\"text-gray-300 font-semibold\">\n            Loading\n          </span>\n        </div>\n        <div class=\"flex-grow flex flex-row border-gray-600 border-l-2\">\n          <SplitPane split=\"vertical\"\n            onResizeStart={() => setResizing(true)}\n            onResizeEnd={() => setResizing(false)}>\n              \n            <SplitPane split=\"horizontal\">\n              <Pane initialSize=\"90%\">\n                <div className=\"flex flex-col h-full\">\n                  <nav style={{ minHeight: '2.5rem' }} className=\"flex flex-col w-full overflow-x-scroll sm:flex-row h-10 px-4 pt-1 bg-gray-800\">\n                    {\n                      Object.keys(files).map((f) => <Tab key={f} onToggle={f => setCurrentModel(f)} value={f} active={currentModel===f}>{files[f].name}</Tab>)\n                    }\n                    <NewFileTab onNewFile={onNewFile}/>\n                  </nav>\n                  <Editor\n                    theme=\"vs-dark\"\n                    className=\"flex-grow w-full\"\n                    language=\"html\"\n                    ref={editorRef}\n                    defaultValue={\"\"}\n                    onMount={handleEditorDidMount}\n                    onChange={onChange}\n                  />\n                </div>   \n              </Pane>\n              <Pane initialSize=\"10%\" minSize=\"10%\" maxSize=\"40%\">\n                <div class=\"px-3 overflow-scroll h-full bg-gray-800 border-t-2 border-gray-600 font-mono\">\n                  <Console logs={logs} variant='dark'/>\n                </div>\n              </Pane>\n            </SplitPane>\n            <Pane initialSize=\"50%\" maxSize=\"60%\" minSize=\"30%\">\n              <iframe\n                className={`w-full h-full border-gray-600 ${resizing ? 'pointer-events-none' : ''}`}\n                title=\"Code Preview\"\n                srcDoc={iframeCode}\n                referrerPolicy=\"origin\"\n                width=\"100%\"\n                ref={iframeRef}\n                onLoad={() => {\n                  window.addEventListener('message', e => {\n                    const msg = e.data\n                    if (msg.level && msg.args) {\n                      // setLogs((currLogs) => [...currLogs, {method: msg.level, data: msg.args}])\n                    }\n                  })\n                }}\n                allowFullScreen\n                allow=\"midi; geolocation; microphone; camera; display-capture; encrypted-media;\"\n                sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-popups allow-top-navigation-by-user-activation allow-downloads\"\n              />\n            </Pane>\n          </SplitPane>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}